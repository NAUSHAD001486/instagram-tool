service: instagram-api-final
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  stage: prod
  timeout: 29
  httpApi:
    cors: true
  environment:
    SCRAPER_API_KEY: "ef73e97059e19e44e271e17ec8d86c6e"
    SCRAPINGDOG_API_KEY: "6880b6230982aa8b8a059c5b"
    SCRAPINGBEE_API_KEY: "U1GQPZ2V3UJYH7T4V6LJ9Y7WZR"
    DYNAMODB_TABLE_NAME: instagram-cache-final
    TZ: Asia/Kolkata
    LOG_LEVEL: DEBUG
  iam:
    role: 
      name: instagram-api-final-role
      statements:
        - Effect: "Allow"
          Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
          Resource: "arn:aws:logs:us-east-1:*:*"
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource: "arn:aws:dynamodb:us-east-1:*:table/instagram-cache-final"
        - Effect: "Allow"
          Action:
            - "ssm:GetParameter"
          Resource: "arn:aws:ssm:us-east-1:*:parameter/instagram-api/*"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: false
    useStaticCache: false
    cacheLocation: ./.cache
    noDeploy:
      - boto3
      - botocore
      - s3transfer
      - jmespath
      - python-dateutil
      - urllib3
      - six

functions:
  api:
    handler: handler.scrape
    memorySize: 3008
    timeout: 29
    events:
      - httpApi:
          path: /scrape
          method: post